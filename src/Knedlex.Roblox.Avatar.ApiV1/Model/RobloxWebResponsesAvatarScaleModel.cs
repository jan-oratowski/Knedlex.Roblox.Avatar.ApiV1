/*
 * Avatar Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.Roblox.Avatar.ApiV1.Client.OpenAPIDateConverter;

namespace Knedlex.Roblox.Avatar.ApiV1.Model
{
    /// <summary>
    /// RobloxWebResponsesAvatarScaleModel
    /// </summary>
    [DataContract(Name = "Roblox.Web.Responses.Avatar.ScaleModel")]
    public partial class RobloxWebResponsesAvatarScaleModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RobloxWebResponsesAvatarScaleModel" /> class.
        /// </summary>
        /// <param name="height">height.</param>
        /// <param name="width">width.</param>
        /// <param name="head">head.</param>
        /// <param name="depth">depth.</param>
        /// <param name="proportion">proportion.</param>
        /// <param name="bodyType">bodyType.</param>
        public RobloxWebResponsesAvatarScaleModel(double height = default(double), double width = default(double), double head = default(double), double depth = default(double), double proportion = default(double), double bodyType = default(double))
        {
            this.Height = height;
            this.Width = width;
            this.Head = head;
            this.Depth = depth;
            this.Proportion = proportion;
            this.BodyType = bodyType;
        }

        /// <summary>
        /// Gets or Sets Height
        /// </summary>
        [DataMember(Name = "height", EmitDefaultValue = false)]
        public double Height { get; set; }

        /// <summary>
        /// Gets or Sets Width
        /// </summary>
        [DataMember(Name = "width", EmitDefaultValue = false)]
        public double Width { get; set; }

        /// <summary>
        /// Gets or Sets Head
        /// </summary>
        [DataMember(Name = "head", EmitDefaultValue = false)]
        public double Head { get; set; }

        /// <summary>
        /// Gets or Sets Depth
        /// </summary>
        [DataMember(Name = "depth", EmitDefaultValue = false)]
        public double Depth { get; set; }

        /// <summary>
        /// Gets or Sets Proportion
        /// </summary>
        [DataMember(Name = "proportion", EmitDefaultValue = false)]
        public double Proportion { get; set; }

        /// <summary>
        /// Gets or Sets BodyType
        /// </summary>
        [DataMember(Name = "bodyType", EmitDefaultValue = false)]
        public double BodyType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RobloxWebResponsesAvatarScaleModel {\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  Head: ").Append(Head).Append("\n");
            sb.Append("  Depth: ").Append(Depth).Append("\n");
            sb.Append("  Proportion: ").Append(Proportion).Append("\n");
            sb.Append("  BodyType: ").Append(BodyType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
