/*
 * Avatar Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.Roblox.Avatar.ApiV1.Client.OpenAPIDateConverter;

namespace Knedlex.Roblox.Avatar.ApiV1.Model
{
    /// <summary>
    /// A model that contains information about the max/mins for each scale
    /// </summary>
    [DataContract(Name = "Roblox.Api.Avatar.Models.ScaleRulesModel")]
    public partial class RobloxApiAvatarModelsScaleRulesModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RobloxApiAvatarModelsScaleRulesModel" /> class.
        /// </summary>
        /// <param name="min">The min scale.</param>
        /// <param name="max">The max scale.</param>
        /// <param name="increment">The increment of the scale.</param>
        public RobloxApiAvatarModelsScaleRulesModel(double min = default(double), double max = default(double), double increment = default(double))
        {
            this.Min = min;
            this.Max = max;
            this.Increment = increment;
        }

        /// <summary>
        /// The min scale
        /// </summary>
        /// <value>The min scale</value>
        [DataMember(Name = "min", EmitDefaultValue = false)]
        public double Min { get; set; }

        /// <summary>
        /// The max scale
        /// </summary>
        /// <value>The max scale</value>
        [DataMember(Name = "max", EmitDefaultValue = false)]
        public double Max { get; set; }

        /// <summary>
        /// The increment of the scale
        /// </summary>
        /// <value>The increment of the scale</value>
        [DataMember(Name = "increment", EmitDefaultValue = false)]
        public double Increment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RobloxApiAvatarModelsScaleRulesModel {\n");
            sb.Append("  Min: ").Append(Min).Append("\n");
            sb.Append("  Max: ").Append(Max).Append("\n");
            sb.Append("  Increment: ").Append(Increment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
