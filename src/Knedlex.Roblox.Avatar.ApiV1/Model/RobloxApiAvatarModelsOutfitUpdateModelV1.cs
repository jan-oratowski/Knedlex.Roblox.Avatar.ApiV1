/*
 * Avatar Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.Roblox.Avatar.ApiV1.Client.OpenAPIDateConverter;

namespace Knedlex.Roblox.Avatar.ApiV1.Model
{
    /// <summary>
    /// A model containing details needed to update or create an outfit
    /// </summary>
    [DataContract(Name = "Roblox.Api.Avatar.Models.OutfitUpdateModelV1")]
    public partial class RobloxApiAvatarModelsOutfitUpdateModelV1 : IValidatableObject
    {
        /// <summary>
        /// The type of outfit [&#39;Invalid&#39; &#x3D; 0, &#39;Avatar&#39; &#x3D; 1, &#39;DynamicHead&#39; &#x3D; 2, &#39;InExperienceBody&#39; &#x3D; 3]
        /// </summary>
        /// <value>The type of outfit [&#39;Invalid&#39; &#x3D; 0, &#39;Avatar&#39; &#x3D; 1, &#39;DynamicHead&#39; &#x3D; 2, &#39;InExperienceBody&#39; &#x3D; 3]</value>
        public enum OutfitTypeEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2,

            /// <summary>
            /// Enum NUMBER_3 for value: 3
            /// </summary>
            NUMBER_3 = 3
        }


        /// <summary>
        /// The type of outfit [&#39;Invalid&#39; &#x3D; 0, &#39;Avatar&#39; &#x3D; 1, &#39;DynamicHead&#39; &#x3D; 2, &#39;InExperienceBody&#39; &#x3D; 3]
        /// </summary>
        /// <value>The type of outfit [&#39;Invalid&#39; &#x3D; 0, &#39;Avatar&#39; &#x3D; 1, &#39;DynamicHead&#39; &#x3D; 2, &#39;InExperienceBody&#39; &#x3D; 3]</value>
        [DataMember(Name = "outfitType", EmitDefaultValue = false)]
        public OutfitTypeEnum? OutfitType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RobloxApiAvatarModelsOutfitUpdateModelV1" /> class.
        /// </summary>
        /// <param name="name">The outfit name.</param>
        /// <param name="bodyColors">bodyColors.</param>
        /// <param name="assetIds">The outfit asset IDs.</param>
        /// <param name="scale">scale.</param>
        /// <param name="playerAvatarType">The avatar scale.</param>
        /// <param name="outfitType">The type of outfit [&#39;Invalid&#39; &#x3D; 0, &#39;Avatar&#39; &#x3D; 1, &#39;DynamicHead&#39; &#x3D; 2, &#39;InExperienceBody&#39; &#x3D; 3].</param>
        public RobloxApiAvatarModelsOutfitUpdateModelV1(string name = default(string), RobloxApiAvatarModelsBodyColorsModel bodyColors = default(RobloxApiAvatarModelsBodyColorsModel), List<long> assetIds = default(List<long>), RobloxWebResponsesAvatarScaleModel scale = default(RobloxWebResponsesAvatarScaleModel), string playerAvatarType = default(string), OutfitTypeEnum? outfitType = default(OutfitTypeEnum?))
        {
            this.Name = name;
            this.BodyColors = bodyColors;
            this.AssetIds = assetIds;
            this.Scale = scale;
            this.PlayerAvatarType = playerAvatarType;
            this.OutfitType = outfitType;
        }

        /// <summary>
        /// The outfit name
        /// </summary>
        /// <value>The outfit name</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets BodyColors
        /// </summary>
        [DataMember(Name = "bodyColors", EmitDefaultValue = false)]
        public RobloxApiAvatarModelsBodyColorsModel BodyColors { get; set; }

        /// <summary>
        /// The outfit asset IDs
        /// </summary>
        /// <value>The outfit asset IDs</value>
        [DataMember(Name = "assetIds", EmitDefaultValue = false)]
        public List<long> AssetIds { get; set; }

        /// <summary>
        /// Gets or Sets Scale
        /// </summary>
        [DataMember(Name = "scale", EmitDefaultValue = false)]
        public RobloxWebResponsesAvatarScaleModel Scale { get; set; }

        /// <summary>
        /// The avatar scale
        /// </summary>
        /// <value>The avatar scale</value>
        [DataMember(Name = "playerAvatarType", EmitDefaultValue = false)]
        public string PlayerAvatarType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RobloxApiAvatarModelsOutfitUpdateModelV1 {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  BodyColors: ").Append(BodyColors).Append("\n");
            sb.Append("  AssetIds: ").Append(AssetIds).Append("\n");
            sb.Append("  Scale: ").Append(Scale).Append("\n");
            sb.Append("  PlayerAvatarType: ").Append(PlayerAvatarType).Append("\n");
            sb.Append("  OutfitType: ").Append(OutfitType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
