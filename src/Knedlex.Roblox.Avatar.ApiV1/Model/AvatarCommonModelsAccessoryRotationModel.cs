/*
 * Avatar Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.Roblox.Avatar.ApiV1.Client.OpenAPIDateConverter;

namespace Knedlex.Roblox.Avatar.ApiV1.Model
{
    /// <summary>
    /// AvatarCommonModelsAccessoryRotationModel
    /// </summary>
    [DataContract(Name = "Avatar.Common.Models.AccessoryRotationModel")]
    public partial class AvatarCommonModelsAccessoryRotationModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AvatarCommonModelsAccessoryRotationModel" /> class.
        /// </summary>
        /// <param name="xRotation">xRotation.</param>
        /// <param name="yRotation">yRotation.</param>
        /// <param name="zRotation">zRotation.</param>
        public AvatarCommonModelsAccessoryRotationModel(double xRotation = default(double), double yRotation = default(double), double zRotation = default(double))
        {
            this.XRotation = xRotation;
            this.YRotation = yRotation;
            this.ZRotation = zRotation;
        }

        /// <summary>
        /// Gets or Sets XRotation
        /// </summary>
        [DataMember(Name = "xRotation", EmitDefaultValue = false)]
        public double XRotation { get; set; }

        /// <summary>
        /// Gets or Sets YRotation
        /// </summary>
        [DataMember(Name = "yRotation", EmitDefaultValue = false)]
        public double YRotation { get; set; }

        /// <summary>
        /// Gets or Sets ZRotation
        /// </summary>
        [DataMember(Name = "zRotation", EmitDefaultValue = false)]
        public double ZRotation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AvatarCommonModelsAccessoryRotationModel {\n");
            sb.Append("  XRotation: ").Append(XRotation).Append("\n");
            sb.Append("  YRotation: ").Append(YRotation).Append("\n");
            sb.Append("  ZRotation: ").Append(ZRotation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
