/*
 * Avatar Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.Roblox.Avatar.ApiV1.Client.OpenAPIDateConverter;

namespace Knedlex.Roblox.Avatar.ApiV1.Model
{
    /// <summary>
    /// A model container BrickColor ids for each body part.
    /// </summary>
    [DataContract(Name = "Roblox.Api.Avatar.Models.BodyColorsModel")]
    public partial class RobloxApiAvatarModelsBodyColorsModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RobloxApiAvatarModelsBodyColorsModel" /> class.
        /// </summary>
        /// <param name="headColorId">The BrickColor id for head color.</param>
        /// <param name="torsoColorId">The BrickColor id for torso color.</param>
        /// <param name="rightArmColorId">The BrickColor id for right arm color.</param>
        /// <param name="leftArmColorId">The BrickColor id for left arm color.</param>
        /// <param name="rightLegColorId">The BrickColor id for right leg color.</param>
        /// <param name="leftLegColorId">The BrickColor id for left leg color.</param>
        public RobloxApiAvatarModelsBodyColorsModel(int headColorId = default(int), int torsoColorId = default(int), int rightArmColorId = default(int), int leftArmColorId = default(int), int rightLegColorId = default(int), int leftLegColorId = default(int))
        {
            this.HeadColorId = headColorId;
            this.TorsoColorId = torsoColorId;
            this.RightArmColorId = rightArmColorId;
            this.LeftArmColorId = leftArmColorId;
            this.RightLegColorId = rightLegColorId;
            this.LeftLegColorId = leftLegColorId;
        }

        /// <summary>
        /// The BrickColor id for head color
        /// </summary>
        /// <value>The BrickColor id for head color</value>
        [DataMember(Name = "headColorId", EmitDefaultValue = false)]
        public int HeadColorId { get; set; }

        /// <summary>
        /// The BrickColor id for torso color
        /// </summary>
        /// <value>The BrickColor id for torso color</value>
        [DataMember(Name = "torsoColorId", EmitDefaultValue = false)]
        public int TorsoColorId { get; set; }

        /// <summary>
        /// The BrickColor id for right arm color
        /// </summary>
        /// <value>The BrickColor id for right arm color</value>
        [DataMember(Name = "rightArmColorId", EmitDefaultValue = false)]
        public int RightArmColorId { get; set; }

        /// <summary>
        /// The BrickColor id for left arm color
        /// </summary>
        /// <value>The BrickColor id for left arm color</value>
        [DataMember(Name = "leftArmColorId", EmitDefaultValue = false)]
        public int LeftArmColorId { get; set; }

        /// <summary>
        /// The BrickColor id for right leg color
        /// </summary>
        /// <value>The BrickColor id for right leg color</value>
        [DataMember(Name = "rightLegColorId", EmitDefaultValue = false)]
        public int RightLegColorId { get; set; }

        /// <summary>
        /// The BrickColor id for left leg color
        /// </summary>
        /// <value>The BrickColor id for left leg color</value>
        [DataMember(Name = "leftLegColorId", EmitDefaultValue = false)]
        public int LeftLegColorId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RobloxApiAvatarModelsBodyColorsModel {\n");
            sb.Append("  HeadColorId: ").Append(HeadColorId).Append("\n");
            sb.Append("  TorsoColorId: ").Append(TorsoColorId).Append("\n");
            sb.Append("  RightArmColorId: ").Append(RightArmColorId).Append("\n");
            sb.Append("  LeftArmColorId: ").Append(LeftArmColorId).Append("\n");
            sb.Append("  RightLegColorId: ").Append(RightLegColorId).Append("\n");
            sb.Append("  LeftLegColorId: ").Append(LeftLegColorId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
