/*
 * Avatar Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.Roblox.Avatar.ApiV1.Client.OpenAPIDateConverter;

namespace Knedlex.Roblox.Avatar.ApiV1.Model
{
    /// <summary>
    /// A model containing details about an asset type and its business rules
    /// </summary>
    [DataContract(Name = "Roblox.Api.Avatar.Models.AssetTypeRulesModel")]
    public partial class RobloxApiAvatarModelsAssetTypeRulesModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RobloxApiAvatarModelsAssetTypeRulesModel" /> class.
        /// </summary>
        /// <param name="maxNumber">The max number of this asset type that can be worn.</param>
        /// <param name="id">The id.</param>
        /// <param name="name">The name.</param>
        public RobloxApiAvatarModelsAssetTypeRulesModel(int maxNumber = default(int), long id = default(long), string name = default(string))
        {
            this.MaxNumber = maxNumber;
            this.Id = id;
            this.Name = name;
        }

        /// <summary>
        /// The max number of this asset type that can be worn
        /// </summary>
        /// <value>The max number of this asset type that can be worn</value>
        [DataMember(Name = "maxNumber", EmitDefaultValue = false)]
        public int MaxNumber { get; set; }

        /// <summary>
        /// The id
        /// </summary>
        /// <value>The id</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// The name
        /// </summary>
        /// <value>The name</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RobloxApiAvatarModelsAssetTypeRulesModel {\n");
            sb.Append("  MaxNumber: ").Append(MaxNumber).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
