/*
 * Avatar Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Knedlex.Roblox.Avatar.ApiV1.Model;
using Knedlex.Roblox.Avatar.ApiV1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Knedlex.Roblox.Avatar.ApiV1.Test.Model
{
    /// <summary>
    ///  Class for testing RobloxApiAvatarModelsGameStartInfoResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RobloxApiAvatarModelsGameStartInfoResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RobloxApiAvatarModelsGameStartInfoResponse
        //private RobloxApiAvatarModelsGameStartInfoResponse instance;

        public RobloxApiAvatarModelsGameStartInfoResponseTests()
        {
            // TODO uncomment below to create an instance of RobloxApiAvatarModelsGameStartInfoResponse
            //instance = new RobloxApiAvatarModelsGameStartInfoResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RobloxApiAvatarModelsGameStartInfoResponse
        /// </summary>
        [Fact]
        public void RobloxApiAvatarModelsGameStartInfoResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" RobloxApiAvatarModelsGameStartInfoResponse
            //Assert.IsType<RobloxApiAvatarModelsGameStartInfoResponse>(instance);
        }

        /// <summary>
        /// Test the property 'GameAvatarType'
        /// </summary>
        [Fact]
        public void GameAvatarTypeTest()
        {
            // TODO unit test for the property 'GameAvatarType'
        }

        /// <summary>
        /// Test the property 'AllowCustomAnimations'
        /// </summary>
        [Fact]
        public void AllowCustomAnimationsTest()
        {
            // TODO unit test for the property 'AllowCustomAnimations'
        }

        /// <summary>
        /// Test the property 'UniverseAvatarCollisionType'
        /// </summary>
        [Fact]
        public void UniverseAvatarCollisionTypeTest()
        {
            // TODO unit test for the property 'UniverseAvatarCollisionType'
        }

        /// <summary>
        /// Test the property 'UniverseAvatarBodyType'
        /// </summary>
        [Fact]
        public void UniverseAvatarBodyTypeTest()
        {
            // TODO unit test for the property 'UniverseAvatarBodyType'
        }

        /// <summary>
        /// Test the property 'JointPositioningType'
        /// </summary>
        [Fact]
        public void JointPositioningTypeTest()
        {
            // TODO unit test for the property 'JointPositioningType'
        }

        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }

        /// <summary>
        /// Test the property 'UniverseAvatarMinScales'
        /// </summary>
        [Fact]
        public void UniverseAvatarMinScalesTest()
        {
            // TODO unit test for the property 'UniverseAvatarMinScales'
        }

        /// <summary>
        /// Test the property 'UniverseAvatarMaxScales'
        /// </summary>
        [Fact]
        public void UniverseAvatarMaxScalesTest()
        {
            // TODO unit test for the property 'UniverseAvatarMaxScales'
        }

        /// <summary>
        /// Test the property 'UniverseAvatarAssetOverrides'
        /// </summary>
        [Fact]
        public void UniverseAvatarAssetOverridesTest()
        {
            // TODO unit test for the property 'UniverseAvatarAssetOverrides'
        }

        /// <summary>
        /// Test the property 'ModerationStatus'
        /// </summary>
        [Fact]
        public void ModerationStatusTest()
        {
            // TODO unit test for the property 'ModerationStatus'
        }
    }
}
