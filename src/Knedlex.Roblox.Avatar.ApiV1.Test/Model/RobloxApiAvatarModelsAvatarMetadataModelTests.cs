/*
 * Avatar Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Knedlex.Roblox.Avatar.ApiV1.Model;
using Knedlex.Roblox.Avatar.ApiV1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Knedlex.Roblox.Avatar.ApiV1.Test.Model
{
    /// <summary>
    ///  Class for testing RobloxApiAvatarModelsAvatarMetadataModel
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RobloxApiAvatarModelsAvatarMetadataModelTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RobloxApiAvatarModelsAvatarMetadataModel
        //private RobloxApiAvatarModelsAvatarMetadataModel instance;

        public RobloxApiAvatarModelsAvatarMetadataModelTests()
        {
            // TODO uncomment below to create an instance of RobloxApiAvatarModelsAvatarMetadataModel
            //instance = new RobloxApiAvatarModelsAvatarMetadataModel();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RobloxApiAvatarModelsAvatarMetadataModel
        /// </summary>
        [Fact]
        public void RobloxApiAvatarModelsAvatarMetadataModelInstanceTest()
        {
            // TODO uncomment below to test "IsType" RobloxApiAvatarModelsAvatarMetadataModel
            //Assert.IsType<RobloxApiAvatarModelsAvatarMetadataModel>(instance);
        }

        /// <summary>
        /// Test the property 'EnableDefaultClothingMessage'
        /// </summary>
        [Fact]
        public void EnableDefaultClothingMessageTest()
        {
            // TODO unit test for the property 'EnableDefaultClothingMessage'
        }

        /// <summary>
        /// Test the property 'IsAvatarScaleEmbeddedInTab'
        /// </summary>
        [Fact]
        public void IsAvatarScaleEmbeddedInTabTest()
        {
            // TODO unit test for the property 'IsAvatarScaleEmbeddedInTab'
        }

        /// <summary>
        /// Test the property 'IsBodyTypeScaleOutOfTab'
        /// </summary>
        [Fact]
        public void IsBodyTypeScaleOutOfTabTest()
        {
            // TODO unit test for the property 'IsBodyTypeScaleOutOfTab'
        }

        /// <summary>
        /// Test the property 'ScaleHeightIncrement'
        /// </summary>
        [Fact]
        public void ScaleHeightIncrementTest()
        {
            // TODO unit test for the property 'ScaleHeightIncrement'
        }

        /// <summary>
        /// Test the property 'ScaleWidthIncrement'
        /// </summary>
        [Fact]
        public void ScaleWidthIncrementTest()
        {
            // TODO unit test for the property 'ScaleWidthIncrement'
        }

        /// <summary>
        /// Test the property 'ScaleHeadIncrement'
        /// </summary>
        [Fact]
        public void ScaleHeadIncrementTest()
        {
            // TODO unit test for the property 'ScaleHeadIncrement'
        }

        /// <summary>
        /// Test the property 'ScaleProportionIncrement'
        /// </summary>
        [Fact]
        public void ScaleProportionIncrementTest()
        {
            // TODO unit test for the property 'ScaleProportionIncrement'
        }

        /// <summary>
        /// Test the property 'ScaleBodyTypeIncrement'
        /// </summary>
        [Fact]
        public void ScaleBodyTypeIncrementTest()
        {
            // TODO unit test for the property 'ScaleBodyTypeIncrement'
        }

        /// <summary>
        /// Test the property 'SupportProportionAndBodyType'
        /// </summary>
        [Fact]
        public void SupportProportionAndBodyTypeTest()
        {
            // TODO unit test for the property 'SupportProportionAndBodyType'
        }

        /// <summary>
        /// Test the property 'ShowDefaultClothingMessageOnPageLoad'
        /// </summary>
        [Fact]
        public void ShowDefaultClothingMessageOnPageLoadTest()
        {
            // TODO unit test for the property 'ShowDefaultClothingMessageOnPageLoad'
        }

        /// <summary>
        /// Test the property 'AreThreeDeeThumbsEnabled'
        /// </summary>
        [Fact]
        public void AreThreeDeeThumbsEnabledTest()
        {
            // TODO unit test for the property 'AreThreeDeeThumbsEnabled'
        }

        /// <summary>
        /// Test the property 'IsAvatarWearingApiCallsLockingOnFrontendEnabled'
        /// </summary>
        [Fact]
        public void IsAvatarWearingApiCallsLockingOnFrontendEnabledTest()
        {
            // TODO unit test for the property 'IsAvatarWearingApiCallsLockingOnFrontendEnabled'
        }

        /// <summary>
        /// Test the property 'IsOutfitHandlingOnFrontendEnabled'
        /// </summary>
        [Fact]
        public void IsOutfitHandlingOnFrontendEnabledTest()
        {
            // TODO unit test for the property 'IsOutfitHandlingOnFrontendEnabled'
        }

        /// <summary>
        /// Test the property 'IsJustinUiChangesEnabled'
        /// </summary>
        [Fact]
        public void IsJustinUiChangesEnabledTest()
        {
            // TODO unit test for the property 'IsJustinUiChangesEnabled'
        }

        /// <summary>
        /// Test the property 'IsCategoryReorgEnabled'
        /// </summary>
        [Fact]
        public void IsCategoryReorgEnabledTest()
        {
            // TODO unit test for the property 'IsCategoryReorgEnabled'
        }

        /// <summary>
        /// Test the property 'LCEnabledInEditorAndCatalog'
        /// </summary>
        [Fact]
        public void LCEnabledInEditorAndCatalogTest()
        {
            // TODO unit test for the property 'LCEnabledInEditorAndCatalog'
        }

        /// <summary>
        /// Test the property 'IsLCCompletelyEnabled'
        /// </summary>
        [Fact]
        public void IsLCCompletelyEnabledTest()
        {
            // TODO unit test for the property 'IsLCCompletelyEnabled'
        }
    }
}
